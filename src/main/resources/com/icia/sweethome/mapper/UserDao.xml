<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icia.sweethome.dao.UserDao">

  <resultMap type="com.icia.sweethome.model.User" id="userResultMap">
     <id column="USER_ID" property="userId" />
     <result column="USER_PWD" property="userPwd" />
     <result column="USER_NICKNAME" property="userNickname" />
     <result column="USER_NAME" property="userName" />
     <result column="USER_EMAIL" property="userEmail" />
     <result column="USER_PHONE" property="userPhone" />
     <result column="USER_ADDRESS" property="userAddress" />
     <result column="USER_STATUS" property="userStatus" />
     <result column="REG_DATE" property="regDate" />
     <result column="DELETE_DATE" property="deleteDate" />
     <result column="IMAGE_FILE_EXISTS" property="imageFileExists" />
     <result column="IMAGE_FILE_EXT" property="imageFileExt" />
  </resultMap>
  
   <resultMap type="com.icia.sweethome.model.User" id="userMyCountMap">
   		<result column="SCRAP_CNT" property="scrapCnt" />
   		<result column="LIKES_CNT" property="likesCnt" />
   		<result column="QUESTION_CNT" property="questionCnt"/>
     </resultMap>
     
     
  <select id="userSelect" parameterType="String" resultMap="userResultMap">     
   SELECT
       NVL(USER_ID, '') AS USER_ID,
       NVL(USER_PWD, '') AS USER_PWD,
       NVL(USER_NICKNAME, '') AS USER_NICKNAME,
       NVL(USER_NAME, '') AS USER_NAME,
       NVL(USER_EMAIL, '') AS USER_EMAIL,
       NVL(USER_PHONE, '') AS USER_PHONE,
       NVL(USER_ADDRESS, '') AS USER_ADDRESS,
       NVL(USER_STATUS, 'N') AS USER_STATUS,
       NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') AS REG_DATE,
       NVL(TO_CHAR(DELETE_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') AS DELETE_DATE,
       NVL(IMAGE_FILE_EXISTS, 'N') AS IMAGE_FILE_EXISTS,
       NVL(IMAGE_FILE_EXT, '') AS IMAGE_FILE_EXT
   FROM  USERS
   WHERE USER_ID = #{value}
  </select>   
  
 <!-- 마이페이지 스크랩건수, 좋아요건수, 내질문 건수 -->
<select id="myCountList" parameterType="String" resultMap="userMyCountMap"> 
       
SELECT S.CNT AS SCRAP_CNT, L.CNT AS LIKES_CNT, C.CNT AS QUESTION_CNT
FROM (SELECT NVL(COUNT(COMMU_IDK),0) AS CNT
        FROM COMMU_SCRAP
        WHERE USER_ID = #{value}) S,
    (SELECT NVL(COUNT(COMMU_IDK),0) AS CNT
        FROM COMMU_LIKES
        WHERE USER_ID = #{value}) L,
    (SELECT NVL(COUNT(QUESTION_IDK),0) AS CNT
        FROM QUESTION_BOARD
        WHERE USER_ID = #{value}) C        
        
</select> 
        
  <insert id="userInsert" parameterType="com.icia.sweethome.model.User"> 
  <!-- insert delete update는 반환 타입이 처리건수(int)이기 때문에 리턴타입이 없다  -->
  INSERT INTO USERS (
    USER_ID,
    USER_PWD,
    USER_NICKNAME,
    USER_NAME,
    USER_EMAIL,
    USER_PHONE,
    USER_ADDRESS,
    USER_STATUS,
    REG_DATE,
    DELETE_DATE,
    IMAGE_FILE_EXISTS,
    IMAGE_FILE_EXT
)VALUES (
    #{userId},
    #{userPwd},
    #{userNickname},
    #{userName},
    #{userEmail},
    #{userPhone},
    #{userAddress},
    #{userStatus},
    SYSDATE,
    NULL,
    #{imageFileExists},
    #{imageFileExt}
)
  </insert>
  
    <update id="userUpdate" parameterType="com.icia.sweethome.model.User">
  UPDATE USERS
   SET USER_PWD = #{userPwd},
       USER_NAME = #{userName},
       USER_NICKNAME = #{userNickname},
       USER_EMAIL = #{userEmail},
       USER_PHONE = #{userPhone},
       USER_ADDRESS = #{userAddress},
       IMAGE_FILE_EXISTS = #{imageFileExists}
  WHERE USER_ID = #{userId}
 </update>
 
 <!-- 아이디 찾기 -->
<select id="searchId" resultType="String">
SELECT NVL(USER_ID, 0)
  FROM USERS
 WHERE USER_NAME = #{userName}
   AND USER_PHONE = #{userPhone}
</select>
   
<!-- 비밀번호 찾기 -->
<select id="searchPwd" resultType="String">
SELECT NVL(USER_PWD, 0)
  FROM USERS
 WHERE USER_ID = #{userId}
   AND USER_EMAIL = #{userEmail}
</select>
 
</mapper>






